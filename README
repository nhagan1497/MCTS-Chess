Project Description: MCTS Chess Engine with Heuristic Optimization

The goal of this project is to develop a Monte Carlo Tree Search (MCTS) Chess Engine that utilizes an advanced heuristic evaluation, integrates a SQLite database for state persistence, and aims to leverage a neural network for improved performance in the long term.

The engine employs a heuristic evaluation function that considers material advantage, piece placement (especially in or near the center of the board), and piece mobility. Instead of relying on random searches to leaf nodes, the engine propagates values back up the tree after each rollout, providing a more informed decision-making process.

To balance exploitation and exploration during the search, the engine utilizes the UCT (Upper Confidence Bound for Trees) formula. This formula guides the decision-making process, allowing the engine to make intelligent moves while exploring alternative paths.

To ensure continuity between runs and enable efficient analysis, the engine saves the tree state to a SQLite database. This feature allows for easy retrieval and continuation of the search process, facilitating the analysis of different game scenarios.

To enhance performance and evaluate more states simultaneously, the engine incorporates multiprocessing. This approach enables parallel evaluation of game states, significantly reducing the overall computation time.

As a long-term objective, the project aims to replace the hand-coded heuristic with a neural network. The MCTS algorithm generates an extensive database of state/value pairs, which can be utilized by the neural network to enhance its own performance. The combination of MCTS and neural networks has proven to be a successful approach in many domains, and this project seeks to leverage their synergy to achieve stronger chess-playing capabilities.

There are numerous opportunities for optimization within the project. For example, the database read/write operations could be cached to utilize available RAM, which is currently underutilized. Additionally, the bottleneck caused by write operations could be addressed by implementing asynchronous writing. These optimizations will improve the overall efficiency and responsiveness of the program.

Through this project, the goal is to develop a robust and efficient MCTS Chess Engine that incorporates advanced heuristic evaluation, persistence through a SQLite database, and has the potential for future integration with neural networks. By continuously optimizing the engine and exploring new techniques, the aim is to enhance its chess-playing abilities.
